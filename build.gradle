plugins {
    id 'java'
    id 'groovy'
    id 'scala'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
    id 'com.bmuschko.nexus' version '2.3.1'
//    id 'io.codearte.nexus-staging' version '0.21.1'
}

group 'xxl.mathematica'
version '1.0.0-SNAPSHOT'

sourceCompatibility = "8"
targetCompatibility = "8"

repositories {
    jcenter()
    mavenCentral()
}

dependencies {

    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.2.0"

    implementation "io.reactivex.rxjava2:rxjava:2.2.12"

    implementation 'org.apache.commons:commons-lang3:3.9'

    implementation 'org.apache.commons:commons-text:1.7'

    implementation 'commons-io:commons-io:2.6'

    implementation 'commons-cli:commons-cli:1.4'

    implementation 'org.osgeo:proj4j:0.1.0'

    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.squareup.okhttp3:okhttp:3.12.6'

    implementation 'org.apache.httpcomponents:httpclient:4.5.10'

//    implementation 'com.sun.mail:jakarta.mail:1.6.4'
    implementation 'org.apache.commons:commons-email:1.5'

    implementation 'org.apache.poi:poi-ooxml:4.1.1'

    implementation 'net.sourceforge.jexcelapi:jxl:2.6.12'

//    implementation 'com.github.wxpay:wxpay-sdk:latest.integration'

    implementation 'org.slf4j:slf4j-api:1.7.29'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    implementation 'com.relops:snowflake:1.1'

    implementation 'com.google.zxing:core:3.4.0'
    implementation 'com.google.zxing:javase:3.4.0'

    implementation 'com.alipay.sdk:alipay-sdk-java:4.8.10.ALL'
    implementation 'com.aliyun:aliyun-java-sdk-core:4.0.3'

    implementation 'io.github.swagger2markup:swagger2markup:1.3.3'

    implementation 'org.asciidoctor:asciidoctorj:2.1.0'
//    implementation 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.18'  //wait for ripe
//    implementation 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.9'  //wait for ripe

//    compileOnly 'org.apache.flink:flink-java:1.9.2'
//    compileOnly 'org.apache.flink:flink-streaming-java_2.12:1.9.2'
//    compileOnly 'org.apache.flink:flink-table-api-java-bridge_2.12:1.9.2'
//    compileOnly 'org.apache.flink:flink-table-planner_2.12:1.9.2'

    implementation 'org.apache.flink:flink-clients_2.12:1.9.2'
    implementation 'org.apache.flink:flink-connector-wikiedits_2.12:1.9.2'
    implementation 'org.apache.flink:flink-connector-kafka_2.12:1.9.2'
    implementation 'org.apache.flink:flink-connector-rabbitmq_2.12:1.9.2'
    //jedis
    implementation 'redis.clients:jedis:3.2.0'
    //kafka-streams
    implementation 'org.apache.kafka:kafka-streams:2.2.0'
    //reactor-netty
    implementation 'io.projectreactor.netty:reactor-netty:0.9.4.RELEASE'
    //mongo
    implementation 'org.mongodb:mongodb-driver:3.12.2'
    //function programming
    implementation 'io.vavr:vavr:0.10.2'
    //yaml
    implementation 'org.yaml:snakeyaml:1.26'
    //media type
    implementation 'org.apache.tika:tika-core:1.24'

    //just use in test to study grammar
    testImplementation 'org.codehaus.groovy:groovy-all:2.5.8'
//    testImplementation 'org.scala-lang:scala-library:2.13.1'

    //real test
    testImplementation 'junit:junit:4.12'
//    testImplementation 'org.scalatest:scalatest_2.13:3.1.0'
//    testImplementation 'org.scalatestplus:junit-4-12_2.13:3.1.0.0'
//
//    testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.13:1.2.0'


}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

shadowJar {
    zip64 true
    manifest {
        attributes(['Main-Class': 'xxl.reactornetty.TcpServerDemo'])
    }
}

nexus {
    sign = true
    repositoryUrl = 'http://localhost:8081/repository/maven-releases/'
    snapshotRepositoryUrl = 'http://localhost:8081/repository/maven-snapshots/'
}